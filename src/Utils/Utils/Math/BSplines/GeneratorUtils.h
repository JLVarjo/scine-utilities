/**
 * @file
 * @copyright This code is licensed under the 3-clause BSD license.\n
 *            Copyright ETH Zurich, Department of Chemistry and Applied Biosciences, Reiher Group.\n
 *            See LICENSE.txt for details.
 */

#ifndef BSPLINES_GENERATORUTILS_H
#define BSPLINES_GENERATORUTILS_H

#include <Eigen/Core>

namespace Scine {
namespace Utils {

namespace BSplines {

/*!
 * Utility functions for BSpline generation.
 * Includes methods and attributes that can be used by all BSplineGenerators
 * Methods for creating parameters and knotVectors from the NURBS book by Piegl 1997:
 *   generateParametersByEquallySpacedMethod() uses eq. (9.3)
 *   generateParametersByChordLengthMethod() uses eqs. (9.4)-(9.5)
 *   generateKnotVectorByDeBoorMethod() uses the eqs. (9.68-9.69)
 *   generateKnotVectorByEquallySpacedMethod() uses eq. (9.7)
 *   generateKnotVectorByKnotAveraging() uses eq. (9.8)
 * \sa Generator
 */
namespace GeneratorUtils {

/* Creates a parameter for every data point and distributes them equally ranging from 0 to 1.
 * only feasible if the data is very evenly distributed */
Eigen::VectorXd generateParametersByEquallySpacedMethod(const Eigen::MatrixXd& dataPoints);

Eigen::VectorXd generateParametersByCentripetalMethod(const Eigen::MatrixXd& dataPoints);

/* This method has to be used if the data is unevenly spaced */
Eigen::VectorXd generateParametersByChordLengthMethod(const Eigen::MatrixXd& dataPoints);

/* If this method is used, the parameters must be generated by the chord length method in order to  prevent
 * that the resulting system of linear equations gets singular. */
Eigen::VectorXd generateKnotVectorByDeBoorsMethod(int splineDegree, int numberPolynomialSegments, const Eigen::VectorXd& uBar);

/* only feasible if the data is very evenly distributed s*/
Eigen::VectorXd generateKnotVectorByUniformMethod(int splineDegree, int numberPolynomialSegments);

Eigen::VectorXd generateKnotVectorByKnotAveraging(int splineDegree, int numberPolynomialSegments, const Eigen::VectorXd& uBar);

} // namespace GeneratorUtils

} // namespace BSplines

} // namespace Utils
} // namespace Scine
#endif // BSPLINES_GENERATORUTILS_H
